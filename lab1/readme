Goal: create google compute instance using Terraform

Tooling: GCP, Terraform, Visual Studio Code, vscode-terraform plugin, goodle SDK

1. install and initialize google SDK

#echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
#apt-get install apt-transport-https ca-certificates
#curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
#sudo apt-get update && sudo apt-get install google-cloud-sdk
#gcloud init
#gcloud set config project [project-id]
#enable gcloud api service

2. query google cloud using api
#gcloud compute machine-types list --filter="zone:(us-west1-a) name~'standard'"
#gcloud compute image list --filter="name~'ubuntu'"

3. create terraform config file (*.tf)
#define resources such as google compute instance and its associated attributes such as network, tags

4. create terraform variable file (*.tf)
#define the variables referenced by other places

5. create terraform output file 
#define public facing resources

6. create credentials to access to google cloud console
#IAM & Admin->service accounts->create new service account->role->create key pair (JSON)
#copy the downloaded JSON key file to the project folder

7. install jq - json processor
#sudo apt-get install jq

8. set up environment variables 
#.env
#!/bin/bash
export GOOGLE_APPLICATION_CREDENTIAL="credentials.json"
export GCLOUD_PROJECT=$(jq -r '.project_id' $GOOGLE_APPLICATION_CREDENTIALS)
export GCLOUD_REGION="us-west1"

9. terraform init
10. terraform plan
11. terraform apply
12. terraform destroy
13. define output variable in module so the calling module can reference



